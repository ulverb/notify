version: '3.8'

services:
  scan_initializer:
    container_name: scan_initializer
    image: 'scan_initializer:0.0.1-SNAPSHOT'
    environment:
      POSTGRESQL_PORT: 5432
      POSTGRESQL_HOST: db
      KAFKA_HOST: kafka
    depends_on:
      - kafka
      - db
    restart: always
    ports:
      - '8001:8001'

  scan_runner:
    container_name: scan_runner
    image: 'scan_runner:0.0.1-SNAPSHOT'
    environment:
      POSTGRESQL_PORT: 5432
      POSTGRESQL_HOST: db
      KAFKA_HOST: kafka
    depends_on:
      - kafka
      - db
    restart: always
    ports:
      - '8002:8002'

  db:
    image: bitnami/postgresql:15
    container_name: postgres-db
    hostname: db
    environment:
      - POSTGRESQL_DATABASE=mend
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
    ports:
      - "5432:5433"
    volumes:
      - postgres_data:/bitnami/postgresql
      - ./scan_initializer/src/main/resources/initDB.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    depends_on:
      - zookeeper

volumes:
  postgres_data: