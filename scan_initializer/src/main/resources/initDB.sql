DROP DATABASE IF EXISTS mend;
CREATE DATABASE mend;


-- Table: public.issues

-- DROP TABLE public.issues;

CREATE TABLE IF NOT EXISTS public.issues
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone,
    description character varying(255) COLLATE pg_catalog."default",
    scan_id bigint,
    CONSTRAINT issues_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.issues
    OWNER to postgres;
-- Index: idx_scan_id

-- DROP INDEX public.idx_scan_id;

CREATE INDEX idx_scan_id
    ON public.issues USING btree
    (scan_id ASC NULLS LAST)
    TABLESPACE pg_default;




-- Table: public.scans

-- DROP TABLE public.scans;

CREATE TABLE IF NOT EXISTS public.scans
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    branch_name character varying(255) COLLATE pg_catalog."default",
    commit_id bigint,
    created_at timestamp with time zone,
    issues bigint,
    organization_name character varying(255) COLLATE pg_catalog."default",
    repository_name character varying(255) COLLATE pg_catalog."default",
    status character varying(255) COLLATE pg_catalog."default",
    type character varying(255) COLLATE pg_catalog."default",
    updated_at timestamp with time zone,
    user_id bigint,
    username character varying(255) COLLATE pg_catalog."default",
    valid boolean,
    CONSTRAINT scans_pkey PRIMARY KEY (id)
)

TABLESPACE pg_default;

ALTER TABLE public.scans
    OWNER to postgres;
-- Index: idx_commit_id

-- DROP INDEX public.idx_commit_id;

CREATE INDEX idx_commit_id
    ON public.scans USING btree
    (commit_id ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: idx_status

-- DROP INDEX public.idx_status;

CREATE INDEX idx_status
    ON public.scans USING btree
    (status COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;
-- Index: idx_user_id

-- DROP INDEX public.idx_user_id;

CREATE INDEX idx_user_id
    ON public.scans USING btree
    (user_id ASC NULLS LAST)
    TABLESPACE pg_default;



-- Table: public.users

-- DROP TABLE public.users;

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone,
    user_type character varying(255) COLLATE pg_catalog."default",
    username character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT ukr43af9ap4edm43mmtq01oddj6 UNIQUE (username)
)

TABLESPACE pg_default;

ALTER TABLE public.users
    OWNER to postgres;
-- Index: idx_username

-- DROP INDEX public.idx_username;

CREATE INDEX idx_username
    ON public.users USING btree
    (username COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

